[
  {
    "title": "Creating a new project",
    "markdown": "Getting startedInstallationOn this pageCreating a new projectPrerequisites‚Äã\nTo use Remotion, you need at least Node 16 or Bun 1.0.3.\nScaffolding a new project‚Äã\nnoteüêß Linux distros need at least version 2.35 of Libc.\nThey also need to install some additional packages.\nnpmbunpnpmyarnUse npm as the package managerbashnpx create-video@latest\nUse npm as the package managerbashnpx create-video@latestUse pnpm as the package managerbashpnpm create video\nUse pnpm as the package managerbashpnpm create videoUse Yarn as the package managerbashyarn create video\nUse Yarn as the package managerbashyarn create videoUse Bun as the package manager and runtimebashbun create video\nUse Bun as the package manager and runtimebashbun create videonoteBun as a runtime is mostly supported. Read more here.\nChoose the template that is most suitable for you.\nFor your first project, we recommend the Hello World template.\nRegular templatesNext.js + Remix templatesAfter the project has been scaffolded, we recommend to open the project in your text editor and starting the Remotion Studio:bashnpm run dev\nbashnpm run devAfter the project has been scaffolded, we recommend to open the project in your text editor and starting the app:bashnpm run dev\nbashnpm run devTo start the Remotion Studio:bashnpm run remotion\nbashnpm run remotion\nInstallation in existing projects‚Äã\nWant to install Remotion in an existing project? Go here instead: Installation in existing projectsImprove this pageAsk on DiscordGet helpLast updated on Dec 21, 2024NextThe fundamentalsPrerequisitesScaffolding a new projectInstallation in existing projects"
  },
  {
    "title": "Contributing to the documentation",
    "markdown": "ContributingWriting docsOn this pageContributing to the documentationGood documentation makes the difference between frustration and joy! We happily accept contributions to the Remotion documentation.\nEditing an existing page‚Äã\nAt the bottom of each page, the Improve this page button is the easiest way to edit a page. You don't even need to setup the repository locally.\nSubmitting a new page‚Äã\nBasic setup (quicker)Full docsThis method will avoid having to compile all docs. You cannot validate if links to other docs are valid.1  Set up the Remotion repository according to the instructions here. \n2  Run node new-doc.mjs and follow the instructions.1  Set up the Remotion repository according the instructions here. \n2  Create a new .md document in the packages/docs/docs folder. \n3  Add the document to packages/docs/sidebars.js.\n4  Write what you have to say!\n5  Run node render-cards.mjs in packages/docs to generate preview cards that will show up if the documentation page is shared on social media.\nLanguage guidelines‚Äã\n\nKeep it brief: Developers don't like to read, so adding too much words will lead to information being lost.\nLink to terminology: When using a Remotion-specific term, link to the terminology page that explains it.\nAvoid emotions and filler language (\"Great! Let's move on to the next step\"). Usually it can be removed without losing any information.\nSeparate into multiple paragraphs if a section is becoming too long.\nAddress the reader as \"you\" and not \"we\".\nDon't blame the user: Instead of \"You have provided the wrong input\", say \"The input is invalid\" or \"the wrong input was provided\".\nDon't assume it is easy: Avoid using the words \"simply\" and \"just\" as beginners might not find it as simple as you do.\n\nAdding code snippets‚Äã\nYou can add codesnippets by beginning a paragraph with three backticks: ```. The code will be highlighted according to the language you specify after the backticks.\n```ts will highlight the code as TypeScript.\nType safe snippets‚Äã\n```ts twoslash will make a snippet type-safe - it will be checked against the TypeScript compiler. This is the preferred way of writing docs, but if it is too hard, you don't have to do it.\nWhen writing typesafe snippets, sometimes it does not make sense to list all import statements at the top.You can add a line stating // ---cut--- and only the content below will be displayed.\nTitles‚Äã\nAdd a title to a code snippet by adding a line with ```ts twoslash title=\"file.ts\":\nfile.tstsconsole.log(\"Hello World\");\nfile.tstsconsole.log(\"Hello World\");\nSpecial formatting‚Äã\nSteps‚Äã\nUse \u003cStep\u003e to create lists:\nmd- \u003cStep\u003e1\u003c/Step\u003e Step 1- \u003cStep\u003e2\u003c/Step\u003e Step 2\nmd- \u003cStep\u003e1\u003c/Step\u003e Step 1- \u003cStep\u003e2\u003c/Step\u003e Step 2\n\n1  Step 1\n2  Step 2\n\nMark as experimental‚Äã\nUse \u003cExperimentalBadge /\u003e to mark something as experimental:\nmd\u003cExperimentalBadge\u003e\u003cp\u003eThis feature is still experimental.\u003c/p\u003e\u003c/ExperimentalBadge\u003e\nmd\u003cExperimentalBadge\u003e\u003cp\u003eThis feature is still experimental.\u003c/p\u003e\u003c/ExperimentalBadge\u003e\nEXPERIMENTALThis feature is still experimental.\nDemos‚Äã\nUsing \u003cDemo type=\"[demo-name]\" /\u003e you can render a Remotion Player and specify props that can be updated.\nmd\u003cDemo type=\"rect\"/\u003e\nmd\u003cDemo type=\"rect\"/\u003e\nwidth200height200cornerRadius0edgeRoundnessdebug\nThe demo needs to be implemented in packages/docs/components/demos/index.tsx.\nSee also‚Äã\n\nGeneral information\nImplementing a new feature\nImplementing a new option\nHow to take a bounty issue\nImprove this pageAsk on DiscordGet helpLast updated on Dec 21, 2024PreviousImplementing a new optionNextFormattingEditing an existing pageSubmitting a new pageLanguage guidelinesAdding code snippetsType safe snippetsTitlesSpecial formattingStepsMark as experimentalDemosSee also"
  },
  {
    "title": "Creating a new project",
    "markdown": "Getting startedInstallationOn this pageCreating a new projectPrerequisites‚Äã\nTo use Remotion, you need at least Node 16 or Bun 1.0.3.\nScaffolding a new project‚Äã\nnoteüêß Linux distros need at least version 2.35 of Libc.\nThey also need to install some additional packages.\nnpmbunpnpmyarnUse npm as the package managerbashnpx create-video@latest\nUse npm as the package managerbashnpx create-video@latestUse pnpm as the package managerbashpnpm create video\nUse pnpm as the package managerbashpnpm create videoUse Yarn as the package managerbashyarn create video\nUse Yarn as the package managerbashyarn create videoUse Bun as the package manager and runtimebashbun create video\nUse Bun as the package manager and runtimebashbun create videonoteBun as a runtime is mostly supported. Read more here.\nChoose the template that is most suitable for you.\nFor your first project, we recommend the Hello World template.\nRegular templatesNext.js + Remix templatesAfter the project has been scaffolded, we recommend to open the project in your text editor and starting the Remotion Studio:bashnpm run dev\nbashnpm run devAfter the project has been scaffolded, we recommend to open the project in your text editor and starting the app:bashnpm run dev\nbashnpm run devTo start the Remotion Studio:bashnpm run remotion\nbashnpm run remotion\nInstallation in existing projects‚Äã\nWant to install Remotion in an existing project? Go here instead: Installation in existing projectsImprove this pageAsk on DiscordGet helpLast updated on Dec 21, 2024NextThe fundamentalsPrerequisitesScaffolding a new projectInstallation in existing projects"
  }
]
